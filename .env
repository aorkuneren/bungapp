# =============================================================================
# BungApp Environment Variables
# =============================================================================
# Bu dosyayı .env olarak kopyalayın ve değerleri kendi ortamınıza göre düzenleyin
# cp .env.example .env

# =============================================================================
# DATABASE (ZORUNLU)
# =============================================================================
# PostgreSQL bağlantı string'i
# Format: postgresql://[user[:password]@][host][:port][/database][?parameters]
DATABASE_URL="postgresql://macmini@localhost:5432/bungapp"

# =============================================================================
# NEXTAUTH (ZORUNLU)
# =============================================================================
# Uygulamanın çalıştığı URL
NEXTAUTH_URL="http://localhost:3000"

# NextAuth için güçlü bir secret key (production'da mutlaka değiştirin)
# Üretmek için: openssl rand -base64 32
NEXTAUTH_SECRET="your-secret-key-here-change-in-production"

# JWT için güçlü bir secret key (production'da mutlaka değiştirin)
# Üretmek için: openssl rand -base64 32
JWT_SECRET="your-jwt-secret-here-change-in-production"

# =============================================================================
# REDIS (OPSİYONEL - Cache için)
# =============================================================================
# Redis bağlantı URL'i - cache performansı için önerilir
REDIS_URL="redis://localhost:6379"

# =============================================================================
# SMTP (OPSİYONEL - E-posta bildirimleri için)
# =============================================================================
# SMTP sunucu ayarları
SMTP_HOST="smtp.gmail.com"
SMTP_PORT="587"
SMTP_USER="your-email@gmail.com"
SMTP_PASS="your-app-password"
MAIL_FROM="BungApp <noreply@bungapp.com>"

# Gmail için App Password oluşturma:
# 1. Google Account > Security > 2-Step Verification
# 2. App passwords > Select app > Mail
# 3. Oluşturulan şifreyi SMTP_PASS'e yazın

# =============================================================================
# S3 STORAGE (OPSİYONEL - Dosya yükleme için)
# =============================================================================
# S3 uyumlu depolama servisi ayarları
S3_ENDPOINT="https://s3.amazonaws.com"
S3_REGION="us-east-1"
S3_BUCKET="bungapp-uploads"
S3_ACCESS_KEY="your-access-key"
S3_SECRET_KEY="your-secret-key"

# AWS S3 için:
# 1. AWS Console > IAM > Users > Create User
# 2. Attach policies: AmazonS3FullAccess
# 3. Security credentials > Create access key
# 4. Access key ID -> S3_ACCESS_KEY
# 5. Secret access key -> S3_SECRET_KEY

# =============================================================================
# SECURITY (OPSİYONEL - Güvenlik başlıkları için)
# =============================================================================
# CSP violation raporları için endpoint
CSP_REPORT_URI="https://your-domain.com/api/csp-report"

# =============================================================================
# DEVELOPMENT (SADECE GELİŞTİRME İÇİN)
# =============================================================================
# Geliştirme ortamında debug modunu etkinleştir
DEBUG="true"

# Geliştirme ortamında detaylı logları etkinleştir
LOG_LEVEL="debug"

# =============================================================================
# PRODUCTION NOTLARI
# =============================================================================
# Production ortamında:
# 1. Tüm secret'ları güçlü, rastgele değerlerle değiştirin
# 2. NEXTAUTH_URL'i production domain'inize ayarlayın
# 3. DATABASE_URL'i production veritabanınıza ayarlayın
# 4. SMTP ayarlarını production e-posta servisinize ayarlayın
# 5. S3 ayarlarını production storage servisinize ayarlayın
# 6. DEBUG ve LOG_LEVEL'ı kaldırın veya "false"/"error" yapın

# Güçlü secret üretme komutları:
# openssl rand -base64 32
# node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
